Transform: AWS::Serverless-2016-10-31
Parameters:
  PostgressDb:
    Default: covid
    Description: postgress database
    Type: String

  RdsUsername:
    Type: String

  RdsPass:
    Type: String



Resources:
  RdsPostgress:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      BackupRetentionPeriod: 0
      DBName: !Ref PostgressDb
      DBInstanceClass: db.t2.micro
      Engine: postgres
      MasterUsername: !Ref RdsUsername
      MasterUserPassword: !Ref RdsPass
      MaxAllocatedStorage: 20
      MultiAZ: false
      DBSecurityGroups:
        - !Ref PostGressSecurityGroup

  PostGressSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress:
        CIDRIP: 0.0.0.0/0
      GroupDescription: "Security Group for Postgress"

  COVIDSNS:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: "crerem@gmail.com"
          Protocol: email




  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.7
      Handler: lambda_function.lambda_handler
      MemorySize: 512
      Timeout: 5
      CodeUri: lambda_function/
      Events:
        CheckWebsiteScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: "cron(0 12 * * ? *)"
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt COVIDSNS.TopicName
      Environment:
        Variables:
          database: !Ref PostgressDb
          endpoint: !GetAtt RdsPostgress.Endpoint.Address
          password: !Ref RdsPass
          port: !GetAtt RdsPostgress.Endpoint.Port
          region: us-east-1
          user: !Ref RdsUsername
          sns_arn: !Ref COVIDSNS

      Layers:
        - arn:aws:lambda:us-east-1:898466741470:layer:psycopg2-py37:3
        - arn:aws:lambda:us-east-1:961736190498:layer:pandas37:1
        - arn:aws:lambda:us-east-1:668099181075:layer:AWSLambda-Python37-SciPy1x:37
